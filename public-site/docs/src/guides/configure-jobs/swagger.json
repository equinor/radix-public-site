{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "This is the API Server for the Radix job scheduler server.",
    "title": "Radix job scheduler server.",
    "contact": {
      "url": "https://equinor.slack.com/messages/CBKM6N2JY"
    },
    "version": "1.0.0"
  },
  "basePath": "/api/v1",
  "paths": {
    "/batches": {
      "post": {
        "tags": [
          "Batch"
        ],
        "summary": "Create batch",
        "operationId": "createBatch",
        "parameters": [
          {
            "description": "Batch to create",
            "name": "batchCreation",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BatchScheduleDescription"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful create batch",
            "schema": {
              "$ref": "#/definitions/BatchStatus"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          },
          "422": {
            "description": "Invalid data in request",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    },
    "/batches/": {
      "get": {
        "tags": [
          "Batch"
        ],
        "summary": "Gets batches",
        "operationId": "getBatches",
        "responses": {
          "200": {
            "description": "Successful get batches",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BatchStatus"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    },
    "/batches/{batchName}": {
      "get": {
        "tags": [
          "Batch"
        ],
        "summary": "Gets batch",
        "operationId": "getBatch",
        "parameters": [
          {
            "type": "string",
            "description": "Name of batch",
            "name": "batchName",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful get batch",
            "schema": {
              "$ref": "#/definitions/BatchStatus"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Batch"
        ],
        "summary": "Delete batch",
        "operationId": "deleteBatch",
        "parameters": [
          {
            "type": "string",
            "description": "Name of batch",
            "name": "batchName",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete batch",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    },
    "/jobs": {
      "post": {
        "tags": [
          "Job"
        ],
        "summary": "Create job",
        "operationId": "createJob",
        "parameters": [
          {
            "description": "Job to create",
            "name": "jobCreation",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobScheduleDescription"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful create job",
            "schema": {
              "$ref": "#/definitions/JobStatus"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          },
          "422": {
            "description": "Invalid data in request",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    },
    "/jobs/": {
      "get": {
        "tags": [
          "Job"
        ],
        "summary": "Gets jobs",
        "operationId": "getJobs",
        "responses": {
          "200": {
            "description": "Successful get jobs",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JobStatus"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    },
    "/jobs/{jobName}": {
      "get": {
        "tags": [
          "Job"
        ],
        "summary": "Gets job",
        "operationId": "getJob",
        "parameters": [
          {
            "type": "string",
            "description": "Name of job",
            "name": "jobName",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful get job",
            "schema": {
              "$ref": "#/definitions/JobStatus"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Job"
        ],
        "summary": "Delete job",
        "operationId": "deleteJob",
        "parameters": [
          {
            "type": "string",
            "description": "Name of job",
            "name": "jobName",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete job",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "BatchScheduleDescription": {
      "description": "BatchScheduleDescription holds description about batch scheduling job",
      "type": "object",
      "required": [
        "jobScheduleDescriptions"
      ],
      "properties": {
        "defaultRadixJobComponentConfig": {
          "$ref": "#/definitions/RadixJobComponentConfig"
        },
        "jobScheduleDescriptions": {
          "description": "JobScheduleDescriptions descriptions of jobs to schedule within the batch",
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobScheduleDescription"
          },
          "x-go-name": "JobScheduleDescriptions"
        }
      },
      "x-go-package": "github.com/equinor/radix-job-scheduler/models"
    },
    "BatchStatus": {
      "description": "BatchStatus holds general information about batch status",
      "type": "object",
      "required": [
        "name",
        "created"
      ],
      "properties": {
        "batchName": {
          "description": "BatchName Optional Batch ID of a job",
          "type": "string",
          "x-go-name": "BatchName",
          "example": "'batch1'"
        },
        "created": {
          "description": "Created timestamp",
          "type": "string",
          "x-go-name": "Created",
          "example": "2006-01-02T15:04:05Z"
        },
        "ended": {
          "description": "Ended timestamp",
          "type": "string",
          "x-go-name": "Ended",
          "example": "2006-01-02T15:04:05Z"
        },
        "jobId": {
          "description": "JobId Optional ID of a job",
          "type": "string",
          "x-go-name": "JobId",
          "example": "'job1'"
        },
        "jobStatuses": {
          "description": "JobStatuses of the jobs in the batch",
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobStatus"
          },
          "x-go-name": "JobStatuses"
        },
        "message": {
          "description": "Status message, if any, of the job",
          "type": "string",
          "x-go-name": "Message",
          "example": "\"Error occurred\""
        },
        "name": {
          "description": "Name of the job",
          "type": "string",
          "x-go-name": "Name",
          "example": "calculator"
        },
        "started": {
          "description": "Started timestamp",
          "type": "string",
          "x-go-name": "Started",
          "example": "2006-01-02T15:04:05Z"
        },
        "status": {
          "description": "Status of the job",
          "type": "string",
          "enum": [
            "Waiting",
            "Running",
            "Succeeded",
            "Stopping",
            "Stopped",
            "Failed"
          ],
          "x-go-name": "Status",
          "example": "Waiting"
        }
      },
      "x-go-package": "github.com/equinor/radix-job-scheduler/models"
    },
    "JobScheduleDescription": {
      "description": "JobScheduleDescription holds description about scheduling job",
      "type": "object",
      "properties": {
        "jobId": {
          "description": "JobId Optional ID of a job",
          "type": "string",
          "x-go-name": "JobId",
          "example": "'job1'"
        },
        "node": {
          "$ref": "#/definitions/RadixNode"
        },
        "payload": {
          "description": "Payload holding json data to be mapped to component",
          "type": "string",
          "x-go-name": "Payload",
          "example": "{'data':'value'}"
        },
        "resources": {
          "$ref": "#/definitions/ResourceRequirements"
        },
        "timeLimitSeconds": {
          "description": "TimeLimitSeconds defines maximum job run time. Corresponds to ActiveDeadlineSeconds in K8s.",
          "type": "integer",
          "format": "int64",
          "x-go-name": "TimeLimitSeconds"
        }
      },
      "x-go-package": "github.com/equinor/radix-job-scheduler/models"
    },
    "JobStatus": {
      "description": "JobStatus holds general information about job status",
      "type": "object",
      "required": [
        "name",
        "created"
      ],
      "properties": {
        "batchName": {
          "description": "BatchName Optional Batch ID of a job",
          "type": "string",
          "x-go-name": "BatchName",
          "example": "'batch1'"
        },
        "created": {
          "description": "Created timestamp",
          "type": "string",
          "x-go-name": "Created",
          "example": "2006-01-02T15:04:05Z"
        },
        "ended": {
          "description": "Ended timestamp",
          "type": "string",
          "x-go-name": "Ended",
          "example": "2006-01-02T15:04:05Z"
        },
        "jobId": {
          "description": "JobId Optional ID of a job",
          "type": "string",
          "x-go-name": "JobId",
          "example": "'job1'"
        },
        "message": {
          "description": "Status message, if any, of the job",
          "type": "string",
          "x-go-name": "Message",
          "example": "\"Error occurred\""
        },
        "name": {
          "description": "Name of the job",
          "type": "string",
          "x-go-name": "Name",
          "example": "calculator"
        },
        "started": {
          "description": "Started timestamp",
          "type": "string",
          "x-go-name": "Started",
          "example": "2006-01-02T15:04:05Z"
        },
        "status": {
          "description": "Status of the job",
          "type": "string",
          "enum": [
            "Waiting",
            "Running",
            "Succeeded",
            "Stopping",
            "Stopped",
            "Failed"
          ],
          "x-go-name": "Status",
          "example": "Waiting"
        }
      },
      "x-go-package": "github.com/equinor/radix-job-scheduler/models"
    },
    "RadixJobComponentConfig": {
      "description": "RadixJobComponentConfig holds description of RadixJobComponent",
      "type": "object",
      "properties": {
        "node": {
          "$ref": "#/definitions/RadixNode"
        },
        "resources": {
          "$ref": "#/definitions/ResourceRequirements"
        },
        "timeLimitSeconds": {
          "description": "TimeLimitSeconds defines maximum job run time. Corresponds to ActiveDeadlineSeconds in K8s.",
          "type": "integer",
          "format": "int64",
          "x-go-name": "TimeLimitSeconds"
        }
      },
      "x-go-package": "github.com/equinor/radix-job-scheduler/models"
    },
    "RadixNode": {
      "description": "RadixNode defines node attributes, where container should be scheduled",
      "type": "object",
      "properties": {
        "gpu": {
          "description": "Gpu Optional. Holds lists of node GPU types, with dashed types to exclude",
          "type": "string",
          "x-go-name": "Gpu"
        },
        "gpuCount": {
          "description": "GpuCount Optional. Holds minimum count of GPU on node",
          "type": "string",
          "x-go-name": "GpuCount"
        }
      },
      "x-go-package": "github.com/equinor/radix-operator/pkg/apis/radix/v1"
    },
    "ResourceList": {
      "description": "ResourceList Placeholder for resouce specifications in the config",
      "type": "object",
      "additionalProperties": {
        "type": "string"
      },
      "x-go-package": "github.com/equinor/radix-operator/pkg/apis/radix/v1"
    },
    "ResourceRequirements": {
      "type": "object",
      "title": "ResourceRequirements describes the compute resource requirements.",
      "properties": {
        "limits": {
          "$ref": "#/definitions/ResourceList"
        },
        "requests": {
          "$ref": "#/definitions/ResourceList"
        }
      },
      "x-go-package": "github.com/equinor/radix-operator/pkg/apis/radix/v1"
    },
    "Status": {
      "description": "Status is a return value for calls that don't return other objects or when a request returns an error",
      "type": "object",
      "properties": {
        "code": {
          "description": "Suggested HTTP return code for this status, 0 if not set.",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Code",
          "example": 404
        },
        "message": {
          "description": "A human-readable description of the status of this operation.",
          "type": "string",
          "x-go-name": "Message",
          "example": "job job123 is not found"
        },
        "reason": {
          "$ref": "#/definitions/StatusReason"
        },
        "status": {
          "description": "Status of the operation.\nOne of: \"Success\" or \"Failure\".",
          "type": "string",
          "x-go-name": "Status",
          "example": "Failure"
        }
      },
      "x-go-package": "github.com/equinor/radix-job-scheduler/models"
    },
    "StatusReason": {
      "type": "string",
      "x-go-package": "github.com/equinor/radix-job-scheduler/models"
    }
  }
}